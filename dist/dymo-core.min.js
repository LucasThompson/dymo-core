'use strict';function AudioProcessor(audioContext){var BUFFER_SIZE=1024;this.timeStretch=function(buffer,ratio){var soundTouch=new SoundTouch(buffer.sampleRate);soundTouch.tempo=ratio;var source=createSource(buffer);var filter=new SimpleFilter(source,soundTouch);var result=audioContext.createBuffer(buffer.numberOfChannels,buffer.length*(1/ratio),buffer.sampleRate);calculateStretched(buffer,result,filter);return result};function createSource(buffer){return{extract:function(target,numFrames,position){var channels=
[];for(var i=0;i<buffer.numberOfChannels;i++)channels.push(buffer.getChannelData(i));for(var i=0;i<numFrames;i++)for(var j=0;j<channels.length;j++)target[i*channels.length+j%channels.length]=channels[j][i+position];return Math.min(numFrames,channels[0].length-position)}}}function calculateStretched(buffer,target,filter){var channels=[];for(var i=0;i<buffer.numberOfChannels;i++)channels.push(target.getChannelData(i));var samples=new Float32Array(BUFFER_SIZE*2);var framesExtracted=filter.extract(samples,
BUFFER_SIZE);var totalFramesExtracted=0;while(framesExtracted){for(var i=0;i<framesExtracted;i++)for(var j=0;j<channels.length;j++)channels[j][i+totalFramesExtracted]=samples[i*channels.length+j%channels.length];totalFramesExtracted+=framesExtracted;framesExtracted=filter.extract(samples,BUFFER_SIZE)}return channels}};function AudioProcessorSource(audioContext,buffer,destination){var self=this;var soundTouch=new SoundTouch(buffer.sampleRate);this.stretchRatio={setValue:function(value){soundTouch.tempo=value},getValue:function(){return soundTouch.tempo}};this.playbackRate={setValue:function(value){soundTouch.rate=value},getValue:function(){return soundTouch.rate}};var BUFFER_SIZE=1024;var source={extract:function(target,numFrames,position){var channels=[];for(var i=0;i<buffer.numberOfChannels;i++)channels.push(buffer.getChannelData(i));
for(var i=0;i<numFrames;i++)for(var j=0;j<channels.length;j++)target[i*channels.length+j%channels.length]=channels[j][i+position];return Math.min(numFrames,channels[0].length-position)}};var f=new SimpleFilter(source,soundTouch);var node=audioContext.createScriptProcessor(BUFFER_SIZE,2,buffer.numberOfChannels);var samples=new Float32Array(BUFFER_SIZE*2);node.onaudioprocess=function(e){var channels=[];for(var i=0;i<buffer.numberOfChannels;i++)channels.push(e.outputBuffer.getChannelData(i));var framesExtracted=
f.extract(samples,BUFFER_SIZE);if(framesExtracted==0)self.stop();for(var i=0;i<framesExtracted;i++)for(var j=0;j<channels.length;j++)channels[j][i]=samples[i*channels.length+j%channels.length]};this.start=function(delay){setTimeout(function(){node.connect(destination)},delay)};this.stop=function(){node.disconnect()}};function Scheduler(audioContext,onSourcesChange,onPlaybackChange){var self=this;var SCHEDULE_AHEAD_TIME=.1;var dymoBasePath="";var buffers={};var sources={};var nextSources={};var endTimes={};var previousOnsets={};this.urisOfPlayingDymos=[];this.listenerOrientation=new Parameter(this,0);var convolverSend=audioContext.createConvolver();convolverSend.connect(audioContext.destination);var numCurrentlyLoading=0;var timeoutID;this.setReverbFile=function(filePath){var audioLoader=new AudioSampleLoader;
loadAudio(filePath,audioLoader,function(){convolverSend.buffer=audioLoader.response;sourceReady()})};this.setDymoBasePath=function(path){dymoBasePath=path};this.getDymoBasePath=function(){return dymoBasePath};this.addSourceFile=function(filePath){if(!buffers[filePath]){var audioLoader=new AudioSampleLoader;loadAudio(dymoBasePath+filePath,audioLoader,function(){buffers[filePath]=audioLoader.response;sourceReady()})}};this.getBuffer=function(dymo){return buffers[dymo.getSourcePath()]};function sourceReady(){if(numCurrentlyLoading>
0)numCurrentlyLoading--;if(numCurrentlyLoading==0&&onSourcesChange)onSourcesChange(numCurrentlyLoading)}this.play=function(dymo){dymo.updatePartOrder(ONSET);internalPlay(dymo)};var deltaOnset=0;function internalPlay(dymo){var uri=dymo.getUri();var currentSources;if(!sources[uri]){currentSources=createNextSources(dymo);sources[uri]={};for(var i=0;i<currentSources.length;i++){var currentDymo=currentSources[i].getDymo();registerSource(uri,currentDymo.getUri(),currentSources[i]);previousOnsets[uri]=currentDymo.getParameter(ONSET).getValue();
if(previousOnsets[uri]<0)deltaOnset=-1*previousOnsets[uri]}}else{currentSources=nextSources[uri];for(var i=0;i<currentSources.length;i++)registerSource(uri,currentSources[i].getDymo().getUri(),currentSources[i])}var delay;if(!endTimes[uri])delay=SCHEDULE_AHEAD_TIME;else delay=endTimes[uri]-audioContext.currentTime;var startTime=audioContext.currentTime+delay;for(var i=0;i<currentSources.length;i++)currentSources[i].play(startTime);setTimeout(function(){var playingDymos=[];for(var i=0;i<currentSources.length;i++)playingDymos.push(currentSources[i].getDymo());
updatePlayingDymos(playingDymos)},delay);var nextSrcs=createNextSources(dymo);if(nextSrcs){nextSources[uri]=nextSrcs;var nextOnset=nextSrcs[0].getDymo().getParameter(ONSET).getValue();var timeToNextOnset=nextOnset-previousOnsets[uri];if(nextOnset!=-1){endTimes[uri]=startTime+timeToNextOnset;previousOnsets[uri]=nextOnset}else endTimes[uri]=startTime+currentSources[0].getDuration()/currentSources[0].getParameterValue(PLAYBACK_RATE);if(endTimes[uri])timeoutID=setTimeout(function(){internalPlay(dymo)},
(endTimes[uri]-audioContext.currentTime-SCHEDULE_AHEAD_TIME)*1E3)}else{endTimes[uri]=startTime+currentSources[0].getDuration()/currentSources[0].getParameterValue(PLAYBACK_RATE);timeoutID=setTimeout(function(){reset(dymo)},(endTimes[uri]-audioContext.currentTime)*1E3)}}function registerSource(topUri,dymoUri,source){sources[topUri][dymoUri]=source}this.pause=function(dymo){callOnSources(dymo,"pause")};this.stop=function(dymo){callOnSources(dymo,"stop");reset(dymo)};function callOnSources(dymo,func){var dymoSources=
sources[dymo.getUri()];if(dymoSources)for(var key in dymoSources)dymoSources[key][func].call(dymoSources[key])}function reset(dymo){window.clearTimeout(timeoutID);var uri=dymo.getUri();sources[uri]=null;nextSources[uri]=null;endTimes[uri]=null;dymo.resetPartsPlayed();updatePlayingDymos([])}function updatePlayingDymos(dymos){var newDymos=[];for(var i=0;i<dymos.length;i++){var currentDymo=dymos[i];while(currentDymo!=null){if(newDymos.indexOf(currentDymo.getUri())<0)newDymos.push(currentDymo.getUri());
currentDymo=currentDymo.getParent()}}self.urisOfPlayingDymos=newDymos;if(onPlaybackChange)onPlaybackChange()}this.getSources=function(dymo){return sources[dymo.getUri()]};this.updateListenerOrientation=function(){var angleInRadians=this.listenerOrientation.value/180*Math.PI;audioContext.listener.setOrientation(Math.sin(angleInRadians),0,-Math.cos(angleInRadians),0,1,0)};function createNextSources(dymo){var nextParts=dymo.getNextParts();if(nextParts){var nextSources=[];for(var i=0;i<nextParts.length;i++)if(nextParts[i].getSourcePath()){var buffer=
buffers[nextParts[i].getSourcePath()];if(buffer)nextSources.push(new Source(nextParts[i],audioContext,buffer,convolverSend))}return nextSources}}function loadAudio(path,audioLoader,onload){numCurrentlyLoading++;audioLoader.src=path;audioLoader.ctx=audioContext;audioLoader.onload=onload;audioLoader.onerror=function(){console.log("Error loading audio ",path)};audioLoader.send()}this.listenerOrientation=new Parameter(this,this.updateListenerOrientation,0)};function Source(dymo,audioContext,buffer,reverbSend){var self=this;var FADE_LENGTH=.02;var SHITTY_TIMESTRETCH_BUFFER_ZONE=.3;var startTime,endTime,currentPausePosition=0;var isPlaying,isPaused;var dryGain=audioContext.createGain();dryGain.connect(audioContext.destination);var reverbGain=audioContext.createGain();reverbGain.connect(reverbSend);reverbGain.gain.value=0;dryGain.connect(reverbGain);var panner=audioContext.createPanner();panner.connect(dryGain);var filter=audioContext.createBiquadFilter();
filter.type="lowpass";filter.frequency.value=2E4;filter.connect(panner);var segment=dymo.getSegment();var time=segment[0];var duration=segment[1];if(!time)time=0;if(!duration)duration=buffer.duration-time;var stretchRatio=dymo.getParameter(TIME_STRETCH_RATIO).getValue();if(stretchRatio!=1){if(time!=0||duration<buffer.duration)buffer=getSubBuffer(buffer,toSamples(time,buffer),toSamples(duration+SHITTY_TIMESTRETCH_BUFFER_ZONE,buffer));buffer=(new AudioProcessor(audioContext)).timeStretch(buffer,stretchRatio);
var shouldBeDuration=duration/stretchRatio;buffer=getSubBuffer(buffer,0,toSamples(shouldBeDuration+FADE_LENGTH,buffer));duration=shouldBeDuration}else if(time!=0||duration<buffer.duration)buffer=getSubBuffer(buffer,toSamples(time,buffer),toSamples(duration+FADE_LENGTH,buffer));fadeBuffer(buffer,buffer.length);var source=audioContext.createBufferSource();source.connect(filter);source.buffer=buffer;var parameters={};parameters[AMPLITUDE]=dryGain.gain;parameters[PLAYBACK_RATE]=source.playbackRate;parameters[TIME_STRETCH_RATIO]=
{value:0};parameters[REVERB]=reverbGain.gain;parameters[FILTER]=filter.frequency;parameters[PAN]={value:0};parameters[HEIGHT]={value:0};parameters[DISTANCE]={value:0};parameters[LOOP]={value:0};var allParameters=[AMPLITUDE,PLAYBACK_RATE,TIME_STRETCH_RATIO,REVERB,FILTER,PAN,HEIGHT,DISTANCE,LOOP];var positiveParameters=[AMPLITUDE,PLAYBACK_RATE,TIME_STRETCH_RATIO,REVERB,FILTER];var positionParameters=[PAN,HEIGHT,DISTANCE];initParameter(AMPLITUDE,dymo.getParameter(AMPLITUDE));initParameter(PLAYBACK_RATE,
dymo.getParameter(PLAYBACK_RATE));initParameter(TIME_STRETCH_RATIO,dymo.getParameter(TIME_STRETCH_RATIO));initParameter(REVERB,dymo.getParameter(REVERB));initParameter(PAN,dymo.getParameter(PAN));initParameter(HEIGHT,dymo.getParameter(HEIGHT));initParameter(DISTANCE,dymo.getParameter(DISTANCE));initParameter(LOOP,dymo.getParameter(LOOP));function initParameter(name,dymoParam){setParameter(name,dymoParam.getValue());dymoParam.addObserver(self)}function removeFromObserved(){for(var i=0;i<allParameters.length;i++){var dymoParam=
dymo.getParameter(allParameters[i]);if(dymoParam)dymoParam.removeObserver(self)}}this.observedParameterChanged=function(param){setParameter(param.getName(),param.getChange(),true)};function setParameter(name,value,relative){if(relative)value+=self.getParameterValue(name);if(value<0&&positiveParameters.indexOf(name)>=0)value=0;setParameterValue(name,value);if(positionParameters.indexOf(name)>=0)updatePannerPosition();else if(name==LOOP)source.loop=value==1}this.getDymo=function(){return dymo};this.getDuration=
function(){return duration};this.isLoopingAndPlaying=function(){return source.loop&&isPlaying};this.getParameterValue=function(name){if(parameters[name])if(parameters[name].value||parameters[name].value==0)return parameters[name].value;else return parameters[name].getValue()};function setParameterValue(name,value){if(parameters[name])if(parameters[name].value||parameters[name].value==0)parameters[name].value=value;else parameters[name].setValue(value)}this.play=function(startTime){source.onended=
removeFromObserved;source.start(startTime);isPlaying=true};this.pause=function(){if(isPlaying){stopAndRemoveAudioSources();currentPausePosition+=audioContext.currentTime-startTime;isPaused=true}else if(isPaused){isPaused=false;this.play()}};this.stop=function(){if(isPlaying){removeFromObserved();stopAndRemoveAudioSources()}currentPausePosition=0};function stopAndRemoveAudioSources(){isPlaying=false;var now=audioContext.currentTime;parameters[AMPLITUDE].setValueAtTime(parameters[AMPLITUDE].value,now);
parameters[AMPLITUDE].linearRampToValueAtTime(0,now+FADE_LENGTH);source.stop(now+2*FADE_LENGTH)}function updatePannerPosition(){if(parameters[DISTANCE].value==0)parameters[DISTANCE].value=-.01;panner.setPosition(parameters[PAN].value,parameters[HEIGHT].value,parameters[DISTANCE].value)}function toSamples(seconds,buffer){if(seconds||seconds==0)return Math.round(seconds*buffer.sampleRate)}function getSubBuffer(buffer,fromSample,durationInSamples){var samplesToCopy=Math.min(buffer.length-fromSample,
durationInSamples);var subBuffer=audioContext.createBuffer(buffer.numberOfChannels,samplesToCopy,buffer.sampleRate);for(var i=0;i<buffer.numberOfChannels;i++){var currentCopyChannel=subBuffer.getChannelData(i);var currentOriginalChannel=buffer.getChannelData(i);for(var j=0;j<samplesToCopy;j++)currentCopyChannel[j]=currentOriginalChannel[fromSample+j]}return subBuffer}function fadeBuffer(buffer,durationInSamples){var fadeSamples=buffer.sampleRate*FADE_LENGTH;for(var i=0;i<buffer.numberOfChannels;i++){var currentChannel=
buffer.getChannelData(i);for(var j=0;j<fadeSamples;j++){currentChannel[j]*=j/fadeSamples;currentChannel[durationInSamples-j-1]*=j/fadeSamples}}}};function BrownianControls(){var self=this;var parameters={};parameters[BROWNIAN_FREQUENCY]=new Parameter(BROWNIAN_FREQUENCY,100);parameters[BROWNIAN_FREQUENCY].addObserver(this);parameters[BROWNIAN_MAX_STEP_SIZE]=new Parameter(BROWNIAN_MAX_STEP_SIZE,.1);parameters[BROWNIAN_MAX_STEP_SIZE].addObserver(this);this.brownianControl=new Control(BROWNIAN,AUTO_CONTROL,parameters);this.brownianControl.update(.5);var min=0;var max=1;var intervalID;startUpdate();function startUpdate(){intervalID=setInterval(function(){var currentMaxStepSize=
parameters[BROWNIAN_MAX_STEP_SIZE].getValue();var currentStep=2*currentMaxStepSize*Math.random()-currentMaxStepSize;var newValue=self.brownianControl.getValue()+currentStep;newValue=Math.min(Math.max(newValue,min),max);self.brownianControl.update(newValue)},parameters[BROWNIAN_FREQUENCY].getValue())}this.getParameter=function(name){return parameters[name]};this.observedParameterChanged=function(param){if(param.getName()==BROWNIAN_FREQUENCY){clearInterval(intervalID);startUpdate()}}};function RampControls(){var self=this;this.frequency=100;this.duration=1E4;var currentValue=0;var isIncreasing=true;var parameters={};parameters[RAMP_TRIGGER]=new Parameter(RAMP_TRIGGER,0);parameters[RAMP_TRIGGER].addObserver(this);this.linearRampControl=new Control(RAMP,AUTO_CONTROL,parameters);var intervalID;function startUpdate(){intervalID=setInterval(function(){var delta=1/self.duration*self.frequency;if(!isIncreasing)delta*=-1;currentValue+=delta;if(0<currentValue&&currentValue<1)self.linearRampControl.update(currentValue);
else if(currentValue>=1){self.linearRampControl.update(1);reset()}else if(currentValue<=0){self.linearRampControl.update(0);reset()}},self.frequency)}function reset(){clearInterval(intervalID);intervalID=undefined;isIncreasing=!isIncreasing}this.getParameter=function(name){return parameters[name]};this.observedParameterChanged=function(param){if(param.getName()==RAMP_TRIGGER)if(!intervalID)startUpdate();else reset()}};function StatsControls(){var self=this;var parameters={};parameters[STATS_FREQUENCY]=new Parameter(STATS_FREQUENCY,300);parameters[STATS_FREQUENCY].addObserver(this);this.randomControl=new Control(RANDOM,AUTO_CONTROL,parameters);var intervalID;startUpdate();function startUpdate(){intervalID=setInterval(function(){self.randomControl.update(Math.random())},parameters[STATS_FREQUENCY].getValue())}this.getParameter=function(name){return parameters[name]};this.observedParameterChanged=function(param){if(param.getName()==
STATS_FREQUENCY){clearInterval(intervalID);startUpdate()}}};function UIControl(control,$scope){var self=this;this.value=control.getValue();control.setUpdateFunction(updateFunction);this.getName=function(){return control.getName()};this.getType=function(){return control.getType()};this.update=function(){if(control.getType()==BUTTON)this.value=1-this.value;if(this.value==true)control.update(1);else if(this.value==false)control.update(0);else control.update(this.value)};function updateFunction(newValue){self.value=newValue;if($scope)setTimeout(function(){$scope.$apply()},
10)}};function OntologyLoader2(dmoUri,$scope,$interval){var mobileRdfUri="rdf/mobile.n3";var multitrackRdfUri="http://purl.org/ontology/studio/multitrack";var rdfsUri="http://www.w3.org/2000/01/rdf-schema";var kb=$rdf.graph();var fetch=$rdf.fetcher(kb);fetch.nowOrWhenFetched("http://localhost/rdf/rdf-schema.n3",undefined,function(success,error){console.log(kb.statements.length+" "+success+" "+error);$scope.statements=kb.statements.length});this.loadDmo=function(rdfUri){$http.get(dmoUri+rdfUri).success(function(data){rdfstore.create(function(err,
store){store.load("text/turtle",data,function(err,results){if(err)console.log(err);store.execute("SELECT ?rendering ?label \t\t\t\t\tWHERE { ?rendering a <"+mobileRdfUri+"#Rendering> . \t\t\t\t\t?rendering <"+rdfsUri+"#label> ?label }",function(err,results){for(var i=0;i<results.length;i++)loadRendering(store,results[i].rendering.value,results[i].label.value)})})})})};function loadRendering(store,renderingUri,label){store.execute("SELECT ?track ?path \t\tWHERE { <"+renderingUri+"> <"+multitrackRdfUri+
"#track> ?track . \t\t?track <"+mobileRdfUri+"#hasAudioPath> ?path }",function(err,results){var trackUris=[];var trackPaths=[];for(var i=0;i<results.length;i++){trackUris.push(results[i].track.value);trackPaths.push(dmoUri+"/"+results[i].path.value)}$scope.rendering=new Rendering(label,trackPaths,$scope);loadFeatures(store,trackUris);loadMappings(store,renderingUri)})}function loadFeatures(store,trackUris){for(var i=0;i<trackUris.length;i++)store.execute("SELECT ?path \t\t\tWHERE { <"+trackUris[i]+
"> <"+mobileRdfUri+"#hasFeaturesPath> ?path }",function(err,results){for(var i=0;i<results.length;i++)loadEventTimes(i,"/"+results[i].path.value);if(results.length<=0)$scope.ontologiesLoaded=true})}function loadMappings(store,renderingUri){store.execute("SELECT ?mapping WHERE { <"+renderingUri+"> <"+mobileRdfUri+"#hasMapping> ?mapping }",function(err,results){for(var i=0;i<results.length;i++)loadMapping(store,results[i].mapping.value)})}function loadMapping(store,mappingUri){$scope.mappingLoadingThreads++;
store.execute("SELECT ?control ?trackPath ?parameter ?multiplier ?label \t\tWHERE { <"+mappingUri+"> <"+mobileRdfUri+"#fromControl> ?control . \t\t<"+mappingUri+"> <"+mobileRdfUri+"#toTrack> ?track . \t\t?track <"+mobileRdfUri+"#hasAudioPath> ?trackPath . \t\t<"+mappingUri+"> <"+mobileRdfUri+"#toParameter> ?parameter . \t\tOPTIONAL { <"+mappingUri+"> <"+mobileRdfUri+"#hasMultiplier> ?multiplier . } \t\tOPTIONAL { <"+mappingUri+"> <"+rdfsUri+"#label> ?label . }}",function(err,results){for(var i=0;i<
results.length;i++){if(results[i].label)var label=results[i].label.value;var control=getControl(results[i].control.value,label);var track=$scope.rendering.getTrackForPath(dmoUri+"/"+results[i].trackPath.value);var parameter=getParameter(track,results[i].parameter.value);if(results[i].multiplier)multiplier=results[i].multiplier.value;else multiplier=1;new Mapping(control,parameter,multiplier)}$scope.mappingLoadingThreads--;$scope.$apply()})}function getControl(controlUri,label){if(controlUri==mobileRdfUri+
"#AccelerometerX")return getAccelerometerControl(0);else if(controlUri==mobileRdfUri+"#AccelerometerY")return getAccelerometerControl(1);else if(controlUri==mobileRdfUri+"#AccelerometerZ")return getAccelerometerControl(2);else if(controlUri==mobileRdfUri+"#GeolocationLatitude")return getGeolocationControl(0);else if(controlUri==mobileRdfUri+"#GeolocationLongitude")return getGeolocationControl(1);else if(controlUri==mobileRdfUri+"#GeolocationDistance")return getGeolocationControl(2);else if(controlUri==
mobileRdfUri+"#CompassHeading")return getCompassControl(0);else if(controlUri==mobileRdfUri+"#Slider"){var sliderControl=new Control(0,label,$scope);$scope.sliderControls.push(sliderControl);$scope.$apply();return sliderControl}else if(controlUri==mobileRdfUri+"#Random")return getStatsControl(0)}function getAccelerometerControl(index){if(!$scope.accelerometerWatcher)$scope.accelerometerWatcher=new AccelerometerWatcher;if(index==0)return $scope.accelerometerWatcher.xControl;else if(index==1)return $scope.accelerometerWatcher.yControl;
else return $scope.accelerometerWatcher.zControl}function getGeolocationControl(index){if(!$scope.geolocationWatcher)$scope.geolocationWatcher=new GeolocationWatcher;if(index==0)return $scope.geolocationWatcher.latitudeControl;else if(index==1)return $scope.geolocationWatcher.longitudeControl;else return $scope.geolocationWatcher.distanceControl}function getCompassControl(index){if(!$scope.compassWatcher)$scope.compassWatcher=new CompassWatcher;if(index==0)return $scope.compassWatcher.headingControl;
else return $scope.compassWatcher.accuracyControl}function getStatsControl(index){if(!$scope.statsControls)$scope.statsControls=new StatsControls($interval);if(index==0)return $scope.statsControls.randomControl}function getParameter(track,parameterUri){if(parameterUri==mobileRdfUri+"#Amplitude")return track.amplitude;else if(parameterUri==mobileRdfUri+"#Pan")return track.pan;else if(parameterUri==mobileRdfUri+"#Distance")return track.distance;else if(parameterUri==mobileRdfUri+"#Onset")return track.onset;
else if(parameterUri==mobileRdfUri+"#ListenerOrientation")return $scope.rendering.listenerOrientation}var eventOntology="http://purl.org/NET/c4dm/event.owl";var timelineOntology="http://purl.org/NET/c4dm/timeline.owl";function loadEventTimes(trackIndex,rdfUri){$scope.featureLoadingThreads++;$http.get(dmoUri+rdfUri).success(function(data){rdfstore.create(function(err,store){store.load("text/turtle",data,function(err,results){if(err)console.log(err);store.execute("SELECT ?xsdTime \t\t\t\t\tWHERE { ?eventType <"+
rdfsUri+"#subClassOf>* <"+eventOntology+"#Event> . \t\t\t\t\t?event a ?eventType . \t\t\t\t\t?event <"+eventOntology+"#time> ?time . \t\t\t\t\t?time <"+timelineOntology+"#at> ?xsdTime }",function(err,results){var times=[];for(var i=0;i<results.length;i++)times.push(toSecondsNumber(results[i].xsdTime.value));$scope.rendering.tracks[trackIndex].setOnsets(times.sort(function(a,b){return a-b}));$scope.featureLoadingThreads--;$scope.$apply()})})})})}function toSecondsNumber(xsdDurationString){return Number(xsdDurationString.substring(2,
xsdDurationString.length-1))}};function DymoLoader(scheduler,$scope,$http){var mobileRdfUri="rdf/mobile.n3";var multitrackRdfUri="http://purl.org/ontology/studio/multitrack";var rdfsUri="http://www.w3.org/2000/01/rdf-schema";var dmos={};var features={};var jsonKeys=["@id","@type","ct","source","navigator","similars","mappings","parts"];this.loadDymoFromJson=function(basePath,jsonUri,callback){scheduler.setDymoBasePath(basePath);loadJson(jsonUri,{},callback,createDymoFromJson)};this.parseDymoFromJson=function(json,callback){callback(createDymoFromJson(json,
{}))};this.loadRenderingFromJson=function(jsonUri,dymoMap,callback){loadJson(jsonUri,dymoMap,callback,createRenderingFromJson)};this.loadGraphFromJson=function(jsonUri,dymoMap,callback){loadJson(jsonUri,dymoMap,callback,createGraphFromJson)};function loadJson(jsonUri,dymoMap,callback,creatingFunction){recursiveLoadJson(jsonUri,"",dymoMap,callback,creatingFunction)}function recursiveLoadJson(jsonUri,jsonString,dymoMap,callback,creatingFunction){var oReq=new XMLHttpRequest;oReq.addEventListener("load",
function(){if(jsonString)jsonString=jsonString.replace('"'+jsonUri+'"',this.responseText);else jsonString=this.responseText;var nextUri=findNextJsonUri(jsonString);if(nextUri)recursiveLoadJson(nextUri,jsonString,dymoMap,callback,creatingFunction);else callback(creatingFunction(JSON.parse(jsonString),dymoMap))});oReq.open("GET",scheduler.getDymoBasePath()+jsonUri);oReq.send()}function findNextJsonUri(jsonString){var index=jsonString.indexOf(".json");if(index>=0)if(index!=jsonString.indexOf("context.json")+
7){var before=jsonString.substring(0,index);var beginning=before.lastIndexOf('"');return jsonString.substring(beginning+1,index+5)}else return findNextJsonUri(jsonString.substring(index+1))}function createDymoFromJson(json,dymoMap){var dymo=recursiveCreateDymoAndParts(json,dymoMap);recursiveAddMappingsAndSimilars(json,dymoMap);return[dymo,dymoMap]}function recursiveCreateDymoAndParts(json,dymoMap){var dymo=new DynamicMusicObject(json["@id"],scheduler,json["ct"]);dymoMap[json["@id"]]=dymo;dymo.setSourcePath(json["source"]);
if(json["navigator"])dymo.setNavigator(getNavigator(json["navigator"],dymo));for(attribute in json)if(jsonKeys.indexOf(attribute)<0)if(json[attribute]["type"]==FEATURE)dymo.setFeature(attribute,json[attribute].value);else if(json[attribute]["type"]==PARAMETER)addOrUpdateDymoParameter(dymo,attribute,json[attribute].value);if(json["parts"])for(var i=0;i<json["parts"].length;i++)dymo.addPart(recursiveCreateDymoAndParts(json["parts"][i],dymoMap));return dymo}function recursiveAddMappingsAndSimilars(json,
dymoMap){var dymo=dymoMap[json["@id"]];if(json["similars"])for(var i=0;i<json["similars"].length;i++)dymo.addSimilar(dymoMap[json["similars"][i]]);if(json["mappings"])for(var i=0;i<json["mappings"].length;i++)dymo.addMapping(createMappingFromJson(json["mappings"][i],dymoMap,dymo));if(json["parts"])for(var i=0;i<json["parts"].length;i++)recursiveAddMappingsAndSimilars(json["parts"][i],dymoMap)}function createRenderingFromJson(json,dymoMap){var rendering=new Rendering(dymoMap[json["topDymo"]]);var controls=
{};for(var i=0;i<json["mappings"].length;i++){var currentMapping=json["mappings"][i];rendering.addMapping(createMappingFromJson(currentMapping,dymoMap,undefined,controls))}return[rendering,controls]}function createMappingFromJson(json,dymoMap,dymo,controls){if(json["controls"]){var targetControls=[];for(var j=0;j<json["controls"].length;j++)targetControls.push(controls[json["controls"][j]]);return createMappingToObjectsFromJson(json,dymoMap,dymo,targetControls,controls)}else if(json["dymos"]){var dymos=
[];var constraint;if(json["dymos"]instanceof Array)for(var j=0;j<json["dymos"].length;j++)dymos.push(dymoMap[json["dymos"][j]]);else{constraint=json["dymos"];var allDymos=Object.keys(dymoMap).map(function(key){return dymoMap[key]});Array.prototype.push.apply(dymos,allDymos.filter(eval(json["dymos"])))}return createMappingToObjectsFromJson(json,dymoMap,dymo,dymos,controls,constraint)}}function createMappingToObjectsFromJson(json,dymoMap,dymo,targets,controls,dymoConstraint){var isRelative=json["relative"];
var domainDims=[];for(var j=0;j<json["domainDims"].length;j++){var currentName=json["domainDims"][j]["name"];var currentType=json["domainDims"][j]["type"];if(currentType==FEATURE)domainDims.push(currentName);else if(currentType==PARAMETER){var currentParameter;if(dymo)currentParameter=addOrUpdateDymoParameter(dymo,currentName,0);else currentParameter=new Parameter(currentName,0);domainDims.push(currentParameter)}else{var control;if(controls){if(!controls[currentName])controls[currentName]=getControl(currentType,
currentName);control=controls[currentName]}else control=getControl(currentType,currentName);domainDims.push(control)}}return new Mapping(domainDims,isRelative,json["function"],targets,json["parameter"],dymoConstraint)}function addOrUpdateDymoParameter(dymo,name,value){currentParameter=dymo.getParameter(name);if(!currentParameter){currentParameter=new Parameter(name,value);dymo.addParameter(currentParameter)}else currentParameter.update(value);return currentParameter}function createGraphFromJson(json,
dymoMap){for(var i=0;i<json.length;i++)if(json[i])for(var j=0;j<json[i].length;j++){var dymo=dymoMap["dymo"+i];var similarDymo=dymoMap["dymo"+json[i][j]];if(dymo&&similarDymo)dymo.addSimilar(similarDymo)}}function getNavigator(type,dymo){if(type==SIMILARITY_NAVIGATOR)return new SimilarityNavigator(dymo);return new SequentialNavigator(dymo)}function getControl(type,label,dmo){if(type==ACCELEROMETER_X)return getAccelerometerControl(0);else if(type==ACCELEROMETER_Y)return getAccelerometerControl(1);
else if(type==ACCELEROMETER_Z)return getAccelerometerControl(2);else if(type==TILT_X)return getAccelerometerControl(3);else if(type==TILT_Y)return getAccelerometerControl(4);else if(type==GEOLOCATION_LATITUDE)return getGeolocationControl(0);else if(type==GEOLOCATION_LONGITUDE)return getGeolocationControl(1);else if(type==GEOLOCATION_DISTANCE)return getGeolocationControl(2);else if(type==COMPASS_HEADING)return getCompassControl(0);else if(type==SLIDER)return new Control(label,type);else if(type==TOGGLE)return new Control(label,
type);else if(type==BUTTON)return new Control(label,type);else if(type==RANDOM)return getStatsControl(0,label);else if(type==BROWNIAN)return getBrownianControl(0,label);else if(type==RAMP)return getRampControl(0,label)}function getStatsControl(index,uri){if(index==0)return(new StatsControls).randomControl;else return new StatsControls}function getBrownianControl(index,uri){if(index==0)return(new BrownianControls).brownianControl;else return new BrownianControls}function getRampControl(index,uri){if(index==
0)return(new RampControls).linearRampControl;else return new RampControls}function getGraphControl(index,uri,graph){if(index==0)return(new GraphControls(graph)).nextNodeControl;else return new GraphControls(graph)}function getAccelerometerControl(index){if(!$scope.accelerometerWatcher)$scope.accelerometerWatcher=new AccelerometerWatcher($scope);if(index==0)return $scope.accelerometerWatcher.xControl;else if(index==1)return $scope.accelerometerWatcher.yControl;else if(index==2)return $scope.accelerometerWatcher.zControl;
else if(index==3)return $scope.accelerometerWatcher.tiltXControl;else if(index==4)return $scope.accelerometerWatcher.tiltYControl}function getGeolocationControl(index){if(!$scope.geolocationWatcher)$scope.geolocationWatcher=new GeolocationWatcher($scope);if(index==0)return $scope.geolocationWatcher.latitudeControl;else if(index==1)return $scope.geolocationWatcher.longitudeControl;else return $scope.geolocationWatcher.distanceControl}function getCompassControl(index){if(!$scope.compassWatcher)$scope.compassWatcher=
new CompassWatcher($scope);if(index==0)return $scope.compassWatcher.headingControl;else return $scope.compassWatcher.accuracyControl}var eventOntology="http://purl.org/NET/c4dm/event.owl";var timelineOntology="http://purl.org/NET/c4dm/timeline.owl";function loadFeatures(dmo,parameterUri,uri,subsetCondition){var fileExtension=uri.slice(uri.indexOf(".")+1);if(fileExtension=="n3")loadFeaturesFromRdf(dmo,parameterUri,uri,subsetCondition);else if(fileExtension=="json")loadFeaturesFromJson(dmo,parameterUri,
uri,subsetCondition)}function loadFeaturesFromRdf(dmo,parameterUri,rdfUri,subsetCondition){if(features[rdfUri])setSegmentationFromRdf(dmo,rdfUri,subsetCondition);else{$scope.featureLoadingThreads++;$http.get(rdfUri).success(function(data){rdfstore.create(function(err,store){store.load("text/turtle",data,function(err,results){if(err)console.log(err);store.execute("SELECT ?xsdTime ?label \t\t\t\t\t\tWHERE { ?event a ?eventType . \t\t\t\t\t\t?event <"+eventOntology+"#time> ?time . \t\t\t\t\t\t?time <"+
timelineOntology+"#at> ?xsdTime . \t\t\t\t\t\tOPTIONAL { ?event <"+rdfsUri+"#label> ?label . } }",function(err,results){var times=[];for(var i=0;i<results.length;i++)times.push({time:toSecondsNumber(results[i].xsdTime.value),label:getValue(results[i].label)});features[rdfUri]=times.sort(function(a,b){return a.time-b.time});setSegmentationFromRdf(dmo,rdfUri,subsetCondition);$scope.featureLoadingThreads--;$scope.$apply()})})})})}}function setSegmentationFromRdf(dmo,rdfUri,subsetCondition){subset=features[rdfUri];
if(subsetCondition)subset=features[rdfUri].filter(function(x){return x.label==subsetCondition});subset=subset.map(function(x){return x.time});dmo.setSegmentation(subset)}function loadFeaturesFromJson(dmo,parameterUri,jsonUri,subsetCondition){if(features[jsonUri])setSegmentationFromRdf(dmo,jsonUri,subsetCondition);else{$scope.featureLoadingThreads++;$http.get(jsonUri).success(function(json){if(json.beat){json=json.beat[0].data;if(subsetCondition)json=json.filter(function(x){return x.label.value==subsetCondition});
json=json.map(function(x){return x.time.value})}dmo.setSegmentation(json);$scope.featureLoadingThreads--;$scope.$apply()})}}function toSecondsNumber(xsdDurationString){return Number(xsdDurationString.substring(2,xsdDurationString.length-1))}};function DymoWriter($http){var RDF_TYPE="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";var dmoRdfUri="rdf/dmo.n3";var mobileRdfUri="rdf/mobile.n3";var charmRdfUri="rdf/charm.n3";var multitrackRdfUri="http://purl.org/ontology/studio/multitrack";var rdfsUri="http://www.w3.org/2000/01/rdf-schema";this.writeDymoToJson=function(dymo,path,name){dymo["@context"]="http://purl.org/ontology/dymo/context.json";if(!name)name="dymo.json";writeJson(dymo,path+name)};this.writeRenderingToJson=function(rendering,
path){writeJson(rendering,path+"rendering.json")};function writeJson(json,path){$http.post(path,json).success(function(res){console.log("written json to "+path)})}this.writeDmoToRdf=function(uri){var writer=N3.Writer({prefixes:{"ch":charmRdfUri+"#"}});var writer=N3.Writer({prefixes:{"dmo":dmoRdfUri+"#"}});var writer=N3.Writer({prefixes:{"mb":mbRdfUri+"#"}});addDmo(writer);writer.end(function(error,result){console.log(result)})};function addDmo(writer){writer.addTriple("_:",RDF_TYPE,"dmo:DMO");writer.addTriple("_:",
"ch:hasPart","ch:test2")}};var DYMO="Dymo";var PARALLEL="parallel";var SEQUENTIAL="sequential";var DYMO_TYPES=[PARALLEL,SEQUENTIAL];var FEATURE="Feature";var PARAMETER="Parameter";var SEQUENTIAL_NAVIGATOR="SequentialNavigator";var SIMILARITY_NAVIGATOR="SimilarityNavigator";var PLAY="Play";var LOOP="Loop";var ONSET="Onset";var DURATION_RATIO="DurationRatio";var AMPLITUDE="Amplitude";var PLAYBACK_RATE="PlaybackRate";var TIME_STRETCH_RATIO="TimeStretchRatio";var PAN="Pan";var DISTANCE="Distance";var HEIGHT="Height";
var REVERB="Reverb";var FILTER="Filter";var PART_INDEX="PartIndex";var PART_COUNT="PartCount";var PART_ORDER="PartOrder";var LISTENER_ORIENTATION="ListenerOrientation";var STATS_FREQUENCY="StatsFrequency";var BROWNIAN_FREQUENCY="BrownianFrequency";var BROWNIAN_MAX_STEP_SIZE="BrownianMaxStepSize";var RAMP_TRIGGER="RampTrigger";var LEAPING_PROBABILITY="LeapingProbability";var CONTINUE_AFTER_LEAPING="ContinueAfterLeaping";
var PARAMETERS=[PLAY,LOOP,ONSET,DURATION_RATIO,AMPLITUDE,PLAYBACK_RATE,TIME_STRETCH_RATIO,PAN,DISTANCE,HEIGHT,REVERB,FILTER,PART_INDEX,PART_COUNT,PART_ORDER,LISTENER_ORIENTATION,STATS_FREQUENCY];var LEVEL="level";var INDEX="index";var ONSET_FEATURE="onset";var PITCH_FEATURE="pitch";var DURATION_FEATURE="duration";var AUTO_CONTROL="AutoControl";var SLIDER="Slider";var TOGGLE="Toggle";var BUTTON="Button";var ACCELEROMETER_X="AccelerometerX";var ACCELEROMETER_Y="AccelerometerY";var ACCELEROMETER_Z="AccelerometerZ";
var TILT_X="TiltX";var TILT_Y="TiltY";var GEOLOCATION_LATITUDE="GeolocationLatitude";var GEOLOCATION_LONGITUDE="GeolocationLongitude";var GEOLOCATION_DISTANCE="GeolocationDistance";var COMPASS_HEADING="CompassHeading";var RANDOM="Random";var BROWNIAN="Brownian";var RAMP="Ramp";var CONTROLS=[SLIDER,TOGGLE,ACCELEROMETER_X,ACCELEROMETER_Y,ACCELEROMETER_Z,TILT_X,TILT_Y,GEOLOCATION_LATITUDE,GEOLOCATION_LONGITUDE,GEOLOCATION_DISTANCE,COMPASS_HEADING,RANDOM,BROWNIAN,RAMP];
var UI_CONTROLS=[SLIDER,TOGGLE,BUTTON];function Control(name,type,parameters){var value;var referenceValue;var referenceAverageCount;var mappings=[];var currentNumAddends,currentSum;var updateFunction;this.getName=function(){return name};this.getParameter=function(name){if(parameters)return parameters[name]};this.getValue=function(){return value};this.getType=function(){return type};this.getReferenceValue=function(){return referenceValue};this.setReferenceAverageCount=function(count){referenceAverageCount=count;this.resetReferenceValue()};
this.resetReferenceValue=function(){value=undefined;referenceValue=undefined;currentNumAddends=0;currentSum=0};this.setUpdateFunction=function(func){updateFunction=func};this.addMapping=function(mapping){mappings.push(mapping);mapping.updateParameter(value,this)};this.removeMapping=function(mapping){var i=mappings.indexOf(mapping);if(i>-1)mappings.splice(i,1)};this.backpropagate=function(newValue,mapping){if(isFinite(newValue)){setValue(newValue,mapping);if(updateFunction)updateFunction(value)}};
this.update=function(newValue){if(referenceAverageCount&&currentNumAddends<referenceAverageCount){currentSum+=newValue;currentNumAddends++;if(currentNumAddends==referenceAverageCount){currentSum/=referenceAverageCount;referenceValue=currentSum}}else if(!isNaN(newValue)){if(referenceValue)newValue-=referenceValue;setValue(newValue)}};function setValue(newValue,mapping){if(value==undefined||Math.abs(newValue-value)>1E-6){value=newValue;updateMappings(mapping)}}function updateMappings(mapping){for(var i=
0;i<mappings.length;i++)if(mappings[i]!=mapping)mappings[i].updateParameter(value,this)}};function DynamicMusicObject(uri,scheduler,type){var self=this;var parent=null;var parts=[];var similars=[];var features={};var parameters={};var mappings=[];var parentMappings=[];var isPlaying=false;var sourcePath;var skipProportionAdjustment=false;var previousIndex=null;initFeaturesAndParameters();var navigator=new SequentialNavigator(this);function initFeaturesAndParameters(){parameters[PLAY]=new Parameter(PLAY,0,true);parameters[LOOP]=new Parameter(LOOP,0,true);parameters[ONSET]=new Parameter(ONSET,
-1);parameters[DURATION_RATIO]=new Parameter(DURATION_RATIO,1);parameters[AMPLITUDE]=new Parameter(AMPLITUDE,1);parameters[PLAYBACK_RATE]=new Parameter(PLAYBACK_RATE,1);parameters[TIME_STRETCH_RATIO]=new Parameter(TIME_STRETCH_RATIO,1);parameters[PAN]=new Parameter(PAN,0);parameters[DISTANCE]=new Parameter(DISTANCE,0);parameters[HEIGHT]=new Parameter(HEIGHT,0);parameters[REVERB]=new Parameter(REVERB,0);parameters[FILTER]=new Parameter(FILTER,0);parameters[PART_INDEX]=new Parameter(PART_INDEX,0,true);
parameters[PART_COUNT]=new Parameter(PART_COUNT,Number.POSITIVE_INFINITY,true);parameters[PLAY].addObserver(self);parameters[PART_INDEX].addObserver(self);parameters[PART_COUNT].addObserver(self)}this.setType=function(t){type=t};this.getType=function(){return type};this.getUri=function(){return uri};this.setParent=function(dymo){parent=dymo;for(name in parameters)if(name!=PLAY&&name!=PART_COUNT&&name!=PART_INDEX)parentMappings.push(new Mapping([dymo.getParameter(name)],true,undefined,[this],name));
var additionalMappings=parent.getMappings();var dymoMap=this.getDymoMap();dymoMap=Object.keys(dymoMap).map(function(key){return dymoMap[key]});for(var i=0;i<additionalMappings.length;i++){var dymoConstraint=additionalMappings[i].getDymoConstraint();if(dymoConstraint){var newTargets=additionalMappings[i].getTargets().concat(dymoMap.filter(eval(dymoConstraint)));additionalMappings[i].setTargets(newTargets)}}};this.removeParent=function(){for(var i=0;i<parentMappings.length;i++)parentMappings[i].disconnect();
parentMappings=[];var additionalMappings=parent.getMappings();var thisDymo=this;for(var i=0;i<additionalMappings.length;i++){var targets=additionalMappings[i].getTargets();targets=targets.filter(function(d){return!d.isSubDymoOf(thisDymo)});additionalMappings[i].setTargets(targets)}parent=null};this.getParent=function(){return parent};this.isSubDymoOf=function(dymo){var currentDymo=this;while(currentDymo){if(currentDymo==dymo)return true;currentDymo=currentDymo.getParent()}return false};this.getDymoMap=
function(){var dymoMap={};recursiveAddToDymoMap(this,dymoMap);return dymoMap};function recursiveAddToDymoMap(dymo,dymoMap){dymoMap[dymo.getUri()]=dymo;for(var i=0;i<dymo.getParts().length;i++)recursiveAddToDymoMap(dymo.getParts()[i],dymoMap)}this.getLevel=function(){if(parent)return parent.getLevel()+1;return 0};this.getIndex=function(){if(parent)return parent.getParts().indexOf(this)};this.addPart=function(dymo){parts.push(dymo);dymo.setParent(this)};this.removePart=function(dymo){parts.splice(array.indexOf(dymo));
dymo.removeParent(this)};this.replacePart=function(index,dymo){if(parts[index])parts[index].removeParent(this);parts[index]=dymo;dymo.setParent(this)};this.getPart=function(index){return parts[index]};this.getParts=function(){return parts};this.getNthPart=function(n,level){return recursiveGetNthPart(n,0,level,this)};function recursiveGetNthPart(n,found,level,dymo){var partsToGo=n-found;var currentParts=dymo.getParts();if(dymo.getLevel()==level&&partsToGo==0)return dymo;else if(dymo.getLevel()>=level-
1){if(partsToGo<currentParts.length)return currentParts[partsToGo];return found+currentParts.length}else for(var i=0;i<currentParts.length;i++){found=recursiveGetNthPart(n,found,level,currentParts[i]);if(isNaN(found))return found}}this.setSourcePath=function(path){sourcePath=path;if(path&&scheduler)scheduler.addSourceFile(path)};this.getSourcePath=function(){if(parent&&!sourcePath)return parent.getSourcePath();return sourcePath};this.addSimilar=function(dymo){similars.push(dymo)};this.getSimilars=
function(dymo){return similars};this.getFeatures=function(){return features};this.setFeature=function(name,value){features[name]=value};this.getFeature=function(name){if(name===LEVEL)return this.getLevel();else if(name===INDEX)return this.getIndex();else if(features.hasOwnProperty(name))return features[name];else if(parent)return parent.getFeature(name);else{var partFeatures=[];for(var i=0;i<parts.length;i++)if(parts[i]){var currentPartFeature=parts[i].getFeatureWithoutLookingFurther(name);if(!isNaN(currentPartFeature))partFeatures.push(currentPartFeature)}if(partFeatures.length>
0)return partFeatures}};this.getFeatureWithoutLookingFurther=function(name){if(features[name])return features[name]};this.getMappings=function(){return mappings};this.getSegment=function(){return[this.getFeature("time"),parameters[DURATION_RATIO].getValue()*this.getFeature("duration")]};this.addParameter=function(parameter){parameters[parameter.getName()]=parameter};this.getParameter=function(parameterName){if(parameterName==LISTENER_ORIENTATION)return scheduler.listenerOrientation;else if(parameterName==
PART_ORDER)return undefined;return parameters[parameterName]};this.addMapping=function(mapping){mappings.push(mapping)};this.observedParameterChanged=function(param){if(param.getName()==PLAY)if(param.getChange()>0)scheduler.play(self);else scheduler.stop(self)};this.setNavigator=function(nav){navigator=nav};this.getNavigator=function(){return navigator};this.resetPartsPlayed=function(){navigator.resetPartsPlayed();for(var i=0;i<parts.length;i++)parts[i].resetPartsPlayed()};this.updatePartOrder=function(featureOrParameterName){if(parts&&
parts[0]&&!isNaN(parts[0].getFeature(featureOrParameterName)))parts.sort(function(p,q){return p.getFeature(featureOrParameterName)-q.getFeature(featureOrParameterName)});else if(parts)parts.sort(function(p,q){return p.getParameter(featureOrParameterName).getValue()-q.getParameter(featureOrParameterName).getValue()})};this.getNextParts=function(){var nextP=navigator.getNextParts();return nextP};this.toJsonHierarchy=function(){var jsonDymo=this.toFlatJson();for(var i=0;i<parts.length;i++)jsonDymo["parts"].push(parts[i].toJsonHierarchy());
return jsonDymo};this.toJsonHierarchyGraph=function(){var graph=createGraph();addToJsonHierarchyGraph(graph,this);return graph};function addToJsonHierarchyGraph(graph,dymo,parentJson){var currentJson=dymo.toFlatJson();graph["nodes"].push(currentJson);if(parentJson)graph["links"].push(createLink(parentJson,currentJson));for(var i=0;i<dymo.getParts().length;i++)addToJsonHierarchyGraph(graph,dymo.getParts()[i],currentJson)}this.toJsonSimilarityGraph=function(){var graph=createGraph();addToJsonSimilarityGraph(graph,
this);return graph};function addToJsonSimilarityGraph(graph,dymo,jsonMap){if(!jsonMap)jsonMap={};if(!jsonMap[dymo.getUri()])jsonMap[dymo.getUri()]=dymo.toFlatJson();var currentJson=jsonMap[dymo.getUri()];graph["nodes"].push(currentJson);for(var i=0;i<dymo.getSimilars().length;i++){var currentSimilar=dymo.getSimilars()[i];if(!jsonMap[currentSimilar.getUri()])jsonMap[currentSimilar.getUri()]=currentSimilar.toFlatJson();graph["links"].push(createLink(currentJson,jsonMap[currentSimilar.getUri()]))}for(var i=
0;i<dymo.getParts().length;i++)addToJsonSimilarityGraph(graph,dymo.getParts()[i],jsonMap)}function createGraph(){return{"nodes":[],"links":[]}}function createLink(dymo1,dymo2){return{"source":dymo1,"target":dymo2,"value":1}}this.toFlatJson=function(){var jsonDymo={"@id":uri,"@type":DYMO};if(type)jsonDymo["ct"]=type;if(sourcePath)jsonDymo["source"]=sourcePath;if(navigator instanceof SimilarityNavigator)jsonDymo["navigator"]=SIMILARITY_NAVIGATOR;for(featureName in features)jsonDymo[featureName]=this.getFeatureJson(featureName);
if(mappings.length>0){jsonDymo["mappings"]=[];for(var i=0;i<mappings.length;i++)jsonDymo["mappings"].push(mappings[i].toJson())}if(parts.length>0)jsonDymo["parts"]=[];if(similars.length>0){jsonDymo["similars"]=[];for(var i=0;i<similars.length;i++)jsonDymo["similars"].push(similars[i].getUri())}return jsonDymo};this.getFeatureJson=function(featureName){return{"value":features[featureName],"type":FEATURE,"adt":featureName.charAt(0).toUpperCase()+featureName.slice(1)}}};function LinearFunction(){this.getValue=function(argument){return argument}}function TriangleFunction(position,range){this.getValue=function(argument){var distance=Math.abs(position-argument);if(distance<range)return 1-distance/range;else return 0}}function RectangleFunction(position,range){this.getValue=function(argument){var distance=Math.abs(position-argument);if(distance<range)return 1;else return 0}};function Mapping(domainDims,relative,functionString,targets,parameterName,dymoConstraint){var inverter=new FunctionInverter;if(!functionString)functionString='new Function("a", "return a;");';var mappingFunction=eval(functionString);var inverseFunction;var inverseString=inverter.invert(inverter.toReturnValueString(functionString));if(inverseString)inverseFunction=eval(inverter.toJavaScriptFunctionString(inverseString));this.getTargets=function(){return targets};this.setTargets=function(newTargets){targets=
newTargets;for(var i=0;i<targets.length;i++)targets[i].getParameter(parameterName).addUpdater(this)};this.getDymoConstraint=function(){return dymoConstraint};this.disconnect=function(){for(var i=0;i<domainDims.length;i++)if(domainDims[i].removeMapping)domainDims[i].removeMapping(this);else if(domainDims[i].removeObserver)domainDims[i].removeObserver(this);for(var i=0;i<targets.length;i++)targets[i].getParameter(parameterName).removeUpdater(this)};this.updateParameter=function(){for(var i=0;i<targets.length;i++)if(relative)targets[i].getParameter(parameterName).relativeUpdate(calculateParameter(targets[i]),
this);else targets[i].getParameter(parameterName).update(calculateParameter(targets[i]),this)};this.observedParameterChanged=function(param){this.updateParameter()};this.updatedParameterChanged=function(value){if(domainDims[0].backpropagate&&!relative){if(inverseFunction)value=inverseFunction(value);domainDims[0].backpropagate(value,this)}};function calculateParameter(dmo){var currentDomainValues=[];for(var i=0;i<domainDims.length;i++){var currentValue;if(typeof domainDims[i]==="string"||domainDims[i]instanceof
String)currentValue=dmo.getFeature(domainDims[i]);else if(relative)currentValue=domainDims[i].getChange();else currentValue=domainDims[i].getValue();currentDomainValues[i]=currentValue}return mappingFunction.apply(this,currentDomainValues)}this.requestValue=function(dmo){for(var i=0;i<domainDims.length;i++)if(domainDims[i].requestValue)domainDims[i].requestValue();return calculateParameter(dmo)};this.toJson=function(){var domainJson=[];for(var i=0;i<domainDims.length;i++)if(domainDims[i]instanceof
Control)domainJson.push({name:domainDims[i].getName(),type:domainDims[i].getType()});else if(domainDims[i]instanceof Parameter)domainJson.push({name:domainDims[i].getName(),type:"Parameter"});else domainJson.push({name:domainDims[i],type:"Feature"});var json={"domainDims":domainJson,"function":functionString};var dymos=targets.filter(function(d){return d instanceof DynamicMusicObject}).map(function(d){return d.getUri()});var controls=targets.filter(function(d){return!(d instanceof DynamicMusicObject)}).map(function(d){return d.getUri()});
if(dymos.length>0)json["dymos"]=dymos;if(controls.length>0)json["controls"]=controls;json["parameter"]=parameterName;return json};function moduloAsItShouldBe(m,n){return(m%n+n)%n}for(var i=0;i<domainDims.length;i++)if(domainDims[i].addMapping)domainDims[i].addMapping(this);else if(domainDims[i].addObserver)domainDims[i].addObserver(this);for(var i=0;i<targets.length;i++)targets[i].getParameter(parameterName).addUpdater(this)};function Parameter(name,initialValue,isInteger){var self=this;var value=initialValue;var change=0;var updaters=[];var observers=[];this.getName=function(){return name};this.getValue=function(){return value};this.getChange=function(){return change};this.addUpdater=function(updater){if(updaters.indexOf(updater)<0){updaters.push(updater);updater.updatedParameterChanged(value)}};this.removeUpdater=function(updater){var i=updaters.indexOf(updater);if(i>-1)updaters.splice(i,1)};this.addObserver=function(observer){observers.push(observer)};
this.removeObserver=function(observer){var i=observers.indexOf(observer);if(i>-1)observers.splice(i,1)};this.getObservers=function(){return observers};this.update=function(newValue,updater){setValueAndNotify(updater,newValue)};this.relativeUpdate=function(newChange,updater){this.update(value+newChange,updater)};function notifyObservers(){for(var i=0;i<observers.length;i++)observers[i].observedParameterChanged(self)}function setValueAndNotify(updater,newValue){if(!isNaN(newValue)){if(isInteger)newValue=
Math.round(newValue);if(Math.abs(newValue-value)>1E-6){change=newValue-value;value=newValue;for(var i=0;i<updaters.length;i++)if(updaters[i]!=updater)updaters[i].updatedParameterChanged(value);if(change)notifyObservers()}}}this.requestValue=function(){for(var i=0;i<this.updaters.length;i++){var requestedValue=updaters[i].requestValue();if(requestedValue&&requestedValue!=value){setValueAndNotifyUpdaters(updaters[i],requestedValue);return value}}return value}};function Rendering(dymo){var self=this;var mappings=[];this.play=function(){if(dymo)dymo.getParameter(PLAY).update(1)};this.stop=function(){if(dymo)dymo.getParameter(PLAY).update(0)};this.addMapping=function(mapping){mappings.push(mapping);mapping.updateParameter()};this.getMappings=function(){return mappings};this.toJson=function(){var json={"mappings":[]};if(dymo)json["topDymo"]=dymo.getUri();for(var i=0;i<mappings.length;i++)json["mappings"].push(mappings[i].toJson());return json}};function FunctionInverter(){this.invert=function(func){var currentNode;try{currentNode=math.parse(func)}catch(e){if(!e instanceof SyntaxError)console.log(e);return}var symbolNode=new math.expression.node.SymbolNode("a");var invertedTree=symbolNode;while(currentNode)if(currentNode.isSymbolNode){symbolNode.name=currentNode.name;currentNode=undefined}else if(currentNode.isParenthesisNode)currentNode=currentNode.content;else if(currentNode.isOperatorNode){var invertedOperator=getInvertedOperator(currentNode.op);
if(currentNode.op=="+"||currentNode.op=="*")if(currentNode.args[0].isConstantNode){invertedTree=new math.expression.node.OperatorNode(invertedOperator,getOperatorName(invertedOperator),[invertedTree,currentNode.args[0]]);currentNode=ifNextNode(currentNode.args[1])}else if(currentNode.args[1].isConstantNode){invertedTree=new math.expression.node.OperatorNode(invertedOperator,getOperatorName(invertedOperator),[invertedTree,currentNode.args[1]]);currentNode=ifNextNode(currentNode.args[0])}else return;
else if(currentNode.op=="-"||currentNode.op=="/")if(currentNode.args[0].isConstantNode){invertedTree=new math.expression.node.OperatorNode(currentNode.op,getOperatorName(currentNode.op),[currentNode.args[0],invertedTree]);currentNode=ifNextNode(currentNode.args[1])}else if(currentNode.args[1].isConstantNode){invertedTree=new math.expression.node.OperatorNode(invertedOperator,getOperatorName(invertedOperator),[invertedTree,currentNode.args[1]]);currentNode=ifNextNode(currentNode.args[0])}else return}else return;
return invertedTree.toString()};this.toJavaScriptFunctionString=function(returnString){return'new Function("a", "return '+returnString+';");'};this.toReturnValueString=function(functionString){return functionString.substring(functionString.indexOf("return ")+7,functionString.indexOf(";"))};function ifNextNode(node){if(node.isOperatorNode||node.isParenthesisNode||node.isSymbolNode)return node}function getInvertedOperator(operator){if(operator=="+")return"-";else if(operator=="-")return"+";else if(operator==
"*")return"/";else if(operator=="/")return"*"}function getOperatorName(operator){if(operator=="+")return"add";else if(operator=="-")return"subtract";else if(operator=="*")return"multiply";else if(operator=="/")return"divide"}};function PolygonTools(){}PolygonTools.isPointInPolygon=function(poly,pt){for(var c=false,i=-1,l=poly.length,j=l-1;++i<l;j=i)(poly[i][1]<=pt[1]&&pt[1]<poly[j][1]||poly[j][1]<=pt[1]&&pt[1]<poly[i][1])&&pt[0]<(poly[j][0]-poly[i][0])*(pt[1]-poly[i][1])/(poly[j][1]-poly[i][1])+poly[i][0]&&(c=!c);return c};
PolygonTools.getArea=function(polygon){var area=0,point1,point2;for(var i=0,j=polygon.length-1;i<polygon.length;j=i,i++){point1=polygon[i];point2=polygon[j];area+=point1[0]*point2[1];area-=point1[1]*point2[0]}area/=2;return area};
PolygonTools.getCentroid=function(polygon){var point1,point2,f,x=0,y=0;for(var i=0,j=polygon.length-1;i<polygon.length;j=i,i++){point1=polygon[i];point2=polygon[j];f=point1[0]*point2[1]-point2[0]*point1[1];x+=(point1[0]+point2[0])*f;y+=(point1[1]+point2[1])*f}f=PolygonTools.getArea(polygon)*6;return{0:x/f,1:y/f}};function sqDist(p,q){return Math.pow(p[0]-q[0],2)+Math.pow(p[1]-q[1],2)}
PolygonTools.getDistanceFromSegment=function(p,v,w){var l2=sqDist(v,w);if(l2==0)return sqDist(p,v);var t=((p[0]-v[0])*(w[0]-v[0])+(p[1]-v[1])*(w[1]-v[1]))/l2;if(t<0)return sqDist(p,v);if(t>1)return sqDist(p,w);return Math.sqrt(sqDist(p,{0:v[0]+t*(w[0]-v[0]),1:v[1]+t*(w[1]-v[1])}))};
PolygonTools.getMinDistanceFromEdge=function(polygon,point){var minDistance=Number.POSITIVE_INFINITY;for(var i=0;i<polygon.length;i++){var currentDistance=PolygonTools.getDistanceFromSegment(point,polygon[i],polygon[(i+1)%polygon.length]);minDistance=Math.min(currentDistance,minDistance)}return minDistance};
PolygonTools.howFarIsPointInPolygon=function(polygon,centroid,point){if(PolygonTools.isPointInPolygon(polygon,point)){var centroidDistance=Math.sqrt(Math.pow(point[0]-centroid[0],2)+Math.pow(point[1]-centroid[1],2));var edgeDistance=PolygonTools.getMinDistanceFromEdge(polygon,point);return Math.sqrt((1-centroidDistance)*edgeDistance/Math.abs(centroidDistance+edgeDistance))}return 0};
PolygonTools.getPolygonFunctionString=function(polygon){return'new Function("a", "b", "return PolygonTools.isPointInPolygon('+getPolygonOrPointString(polygon)+', {0:a, 1:b});");'};PolygonTools.getInterpolatedPolygonFunctionString=function(polygon){var polygonString=getPolygonOrPointString(polygon);var centroidString=getPolygonOrPointString(PolygonTools.getCentroid(polygon));return'new Function("a", "b", "return PolygonTools.howFarIsPointInPolygon('+polygonString+","+centroidString+', {0:a, 1:b});");'};
function getPolygonOrPointString(polygonOrPoint){return JSON.stringify(polygonOrPoint).replace(/"/g,"'")};function SequentialNavigator(dymo){var isPlaying=false;var partsPlayed=0;this.resetPartsPlayed=function(){partsPlayed=0};this.setPartsPlayed=function(played){partsPlayed=played};this.getPartsPlayed=function(){return partsPlayed};this.getNextParts=function(){var parts=dymo.getParts();if(parts.length>0){if(dymo.getType()==PARALLEL){var parallelParts=[];for(var i=0;i<parts.length;i++){var nextParts=parts[i].getNextParts();if(nextParts&&(!nextParts.length||nextParts.length>0))parallelParts=parallelParts.concat(nextParts)}if(parallelParts.length>
0){console.log(parallelParts.map(function(d){return d.getIndex()}));return parallelParts}}else{isPlaying=true;while(partsPlayed<parts.length&&partsPlayed<dymo.getParameter(PART_COUNT).getValue()){var nextParts=parts[partsPlayed].getNextParts();if(nextParts&&(!nextParts.length||nextParts.length>0)){if(!nextParts instanceof Array)nextParts=[nextParts];return nextParts}else partsPlayed++}}partsPlayed=0;isPlaying=false;return null}else if(!isPlaying){isPlaying=true;return[dymo]}else{isPlaying=false;return null}}}
;function SimilarityNavigator(dymo){var self=this;var isPlaying=false;var partsPlayed=0;this.leapingProbability=new Parameter(LEAPING_PROBABILITY,.5);this.continueAfterLeaping=new Parameter(CONTINUE_AFTER_LEAPING,0,true);this.resetPartsPlayed=function(){partsPlayed=0};this.getNextParts=function(){var parts=dymo.getParts();if(parts.length>0){if(dymo.getType()==PARALLEL){var parallelParts=[];for(var i=0;i<parts.length;i++){var nextParts=parts[i].getNextParts();if(nextParts&&(!nextParts.length||nextParts.length>
0))parallelParts=parallelParts.concat(nextParts)}if(parallelParts.length>0){replaceWithSimilars(parallelParts);return parallelParts}}else{isPlaying=true;while(partsPlayed<parts.length&&partsPlayed<dymo.getParameter(PART_COUNT).getValue()){var nextParts=parts[partsPlayed].getNextParts();if(nextParts&&(!nextParts.length||nextParts.length>0)){if(!nextParts instanceof Array)nextParts=[nextParts];replaceWithSimilars(nextParts);return nextParts}else partsPlayed++}}partsPlayed=0;isPlaying=false;return null}else if(!isPlaying){isPlaying=
true;return[dymo]}else{isPlaying=false;return null}};function replaceWithSimilars(parts){for(var i=0;i<parts.length;i++)if(parts[i].getSimilars().length>0)if(Math.random()<self.leapingProbability.getValue()){var options=parts[i].getSimilars();var selectedOption=Math.floor(Math.random()*options.length);if(self.continueAfterLeaping.getValue()){var index=dymo.getParts().indexOf(selectedOption);if(index)partsPlayed=index+1}parts[i]=options[selectedOption]}}};
